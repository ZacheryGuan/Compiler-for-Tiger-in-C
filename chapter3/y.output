State 2 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 decs: dec decs
    3     | %empty

    4 dec: tydec
    5    | vardec
    6    | fundec

    7 tydec: TYPE ID EQ ty

    8 ty: ID
    9   | LBRACE tyfields RBRACE
   10   | ARRAY OF ID

   11 tyfields: tyfield
   12         | %empty

   13 tyfield: ID COLON ID
   14        | tyfield COMMA ID COLON ID

   15 vardec: VAR ID ASSIGN exp
   16       | VAR ID COLON ID ASSIGN exp

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   19 exp: lvalue
   20    | INT
   21    | STRING
   22    | NIL
   23    | LPAREN expseq RPAREN
   24    | LPAREN RPAREN
   25    | MINUS exp
   26    | exp PLUS exp
   27    | exp MINUS exp
   28    | exp TIMES exp
   29    | exp DIVIDE exp
   30    | exp EQ exp
   31    | exp NEQ exp
   32    | exp LT exp
   33    | exp LE exp
   34    | exp GT exp
   35    | exp GE exp
   36    | exp AND exp
   37    | exp OR exp
   38    | funcall
   39    | ID LBRACK exp RBRACK OF exp
   40    | ID LBRACE RBRACE
   41    | ID LBRACE ass RBRACE
   42    | lvalue ASSIGN exp
   43    | IF exp THEN exp
   44    | IF exp THEN exp ELSE exp
   45    | WHILE exp DO exp
   46    | FOR ID ASSIGN exp TO exp DO exp
   47    | BREAK
   48    | LET decs IN END
   49    | LET decs IN expseq END
   50    | LPAREN error RPAREN
   51    | error SEMICOLON exp

   52 funcall: ID LPAREN RPAREN
   53        | ID LPAREN para RPAREN

   54 para: exp
   55     | exp COMMA para

   56 ass: ID EQ exp
   57    | ID EQ exp COMMA ass

   58 expseq: exp
   59       | exp SEMICOLON expseq

   60 lvalue: ID
   61       | lvalue DOT ID
   62       | lvalue LBRACK exp RBRACK
   63       | ID LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256) 50 51
ID (258) 7 8 10 13 14 15 16 17 18 39 40 41 46 52 53 56 57 60 61 63
STRING (259) 21
INT (260) 20
COMMA (261) 14 55 57
COLON (262) 13 14 16 18
SEMICOLON (263) 51 59
LPAREN (264) 17 18 23 24 50 52 53
RPAREN (265) 17 18 23 24 50 52 53
LBRACK (266) 39 62 63
RBRACK (267) 39 62 63
LBRACE (268) 9 40 41
RBRACE (269) 9 40 41
DOT (270) 61
PLUS (271) 26
MINUS (272) 25 27
TIMES (273) 28
DIVIDE (274) 29
EQ (275) 7 17 18 30 56 57
NEQ (276) 31
LT (277) 32
LE (278) 33
GT (279) 34
GE (280) 35
AND (281) 36
OR (282) 37
ASSIGN (283) 15 16 42 46
ARRAY (284) 10
IF (285) 43 44
THEN (286) 43 44
ELSE (287) 44
WHILE (288) 45
FOR (289) 46
TO (290) 46
DO (291) 45 46
LET (292) 48 49
IN (293) 48 49
END (294) 48 49
OF (295) 10 39
BREAK (296) 47
NIL (297) 22
FUNCTION (298) 17 18
VAR (299) 15 16
TYPE (300) 7
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
decs (49)
    on left: 2 3, on right: 2 48 49
dec (50)
    on left: 4 5 6, on right: 2
tydec (51)
    on left: 7, on right: 4
ty (52)
    on left: 8 9 10, on right: 7
tyfields (53)
    on left: 11 12, on right: 9 17 18
tyfield (54)
    on left: 13 14, on right: 11 14
vardec (55)
    on left: 15 16, on right: 5
fundec (56)
    on left: 17 18, on right: 6
exp (57)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 44 45 46 47 48 49 50 51, on right: 1 15 16
    17 18 25 26 27 28 29 30 31 32 33 34 35 36 37 39 42 43 44 45 46
    51 54 55 56 57 58 59 62 63
funcall (58)
    on left: 52 53, on right: 38
para (59)
    on left: 54 55, on right: 53 55
ass (60)
    on left: 56 57, on right: 41 57
expseq (61)
    on left: 58 59, on right: 23 49 59
lvalue (62)
    on left: 60 61 62 63, on right: 19 42 61 62


State 0

    0 $accept: . program $end

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    program  go to state 13
    exp      go to state 14
    funcall  go to state 15
    lvalue   go to state 16


State 1

   51 exp: error . SEMICOLON exp

    SEMICOLON  shift, and go to state 17


State 2

   39 exp: ID . LBRACK exp RBRACK OF exp
   40    | ID . LBRACE RBRACE
   41    | ID . LBRACE ass RBRACE
   52 funcall: ID . LPAREN RPAREN
   53        | ID . LPAREN para RPAREN
   60 lvalue: ID .
   63       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 18
    LBRACK  shift, and go to state 19
    LBRACE  shift, and go to state 20

    LBRACK    [reduce using rule 60 (lvalue)]
    $default  reduce using rule 60 (lvalue)


State 3

   21 exp: STRING .

    $default  reduce using rule 21 (exp)


State 4

   20 exp: INT .

    $default  reduce using rule 20 (exp)


State 5

   23 exp: LPAREN . expseq RPAREN
   24    | LPAREN . RPAREN
   50    | LPAREN . error RPAREN

    error   shift, and go to state 21
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 22
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 23
    funcall  go to state 15
    expseq   go to state 24
    lvalue   go to state 16


State 6

   25 exp: MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 25
    funcall  go to state 15
    lvalue   go to state 16


State 7

   43 exp: IF . exp THEN exp
   44    | IF . exp THEN exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 26
    funcall  go to state 15
    lvalue   go to state 16


State 8

   45 exp: WHILE . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 27
    funcall  go to state 15
    lvalue   go to state 16


State 9

   46 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 28


State 10

   48 exp: LET . decs IN END
   49    | LET . decs IN expseq END

    FUNCTION  shift, and go to state 29
    VAR       shift, and go to state 30
    TYPE      shift, and go to state 31

    $default  reduce using rule 3 (decs)

    decs    go to state 32
    dec     go to state 33
    tydec   go to state 34
    vardec  go to state 35
    fundec  go to state 36


State 11

   47 exp: BREAK .

    $default  reduce using rule 47 (exp)


State 12

   22 exp: NIL .

    $default  reduce using rule 22 (exp)


State 13

    0 $accept: program . $end

    $end  shift, and go to state 37


State 14

    1 program: exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 1 (program)


State 15

   38 exp: funcall .

    $default  reduce using rule 38 (exp)


State 16

   19 exp: lvalue .
   42    | lvalue . ASSIGN exp
   61 lvalue: lvalue . DOT ID
   62       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 50
    DOT     shift, and go to state 51
    ASSIGN  shift, and go to state 52

    $default  reduce using rule 19 (exp)


State 17

   51 exp: error SEMICOLON . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 53
    funcall  go to state 15
    lvalue   go to state 16


State 18

   52 funcall: ID LPAREN . RPAREN
   53        | ID LPAREN . para RPAREN

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 54
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 55
    funcall  go to state 15
    para     go to state 56
    lvalue   go to state 16


State 19

   39 exp: ID LBRACK . exp RBRACK OF exp
   63 lvalue: ID LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 57
    funcall  go to state 15
    lvalue   go to state 16


State 20

   40 exp: ID LBRACE . RBRACE
   41    | ID LBRACE . ass RBRACE

    ID      shift, and go to state 58
    RBRACE  shift, and go to state 59

    ass  go to state 60


State 21

   50 exp: LPAREN error . RPAREN
   51    | error . SEMICOLON exp

    SEMICOLON  shift, and go to state 17
    RPAREN     shift, and go to state 61


State 22

   24 exp: LPAREN RPAREN .

    $default  reduce using rule 24 (exp)


State 23

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   58 expseq: exp .
   59       | exp . SEMICOLON expseq

    SEMICOLON  shift, and go to state 62
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49

    $default  reduce using rule 58 (expseq)


State 24

   23 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 63


State 25

   25 exp: MINUS exp .
   26    | exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    $default  reduce using rule 25 (exp)


State 26

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   43    | IF exp . THEN exp
   44    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    THEN    shift, and go to state 64


State 27

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   45    | WHILE exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 65


State 28

   46 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 66


State 29

   17 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 67


State 30

   15 vardec: VAR . ID ASSIGN exp
   16       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 68


State 31

    7 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 69


State 32

   48 exp: LET decs . IN END
   49    | LET decs . IN expseq END

    IN  shift, and go to state 70


State 33

    2 decs: dec . decs

    FUNCTION  shift, and go to state 29
    VAR       shift, and go to state 30
    TYPE      shift, and go to state 31

    $default  reduce using rule 3 (decs)

    decs    go to state 71
    dec     go to state 33
    tydec   go to state 34
    vardec  go to state 35
    fundec  go to state 36


State 34

    4 dec: tydec .

    $default  reduce using rule 4 (dec)


State 35

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


State 36

    6 dec: fundec .

    $default  reduce using rule 6 (dec)


State 37

    0 $accept: program $end .

    $default  accept


State 38

   26 exp: exp PLUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 72
    funcall  go to state 15
    lvalue   go to state 16


State 39

   27 exp: exp MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 73
    funcall  go to state 15
    lvalue   go to state 16


State 40

   28 exp: exp TIMES . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 74
    funcall  go to state 15
    lvalue   go to state 16


State 41

   29 exp: exp DIVIDE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 75
    funcall  go to state 15
    lvalue   go to state 16


State 42

   30 exp: exp EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 76
    funcall  go to state 15
    lvalue   go to state 16


State 43

   31 exp: exp NEQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 77
    funcall  go to state 15
    lvalue   go to state 16


State 44

   32 exp: exp LT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 78
    funcall  go to state 15
    lvalue   go to state 16


State 45

   33 exp: exp LE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 79
    funcall  go to state 15
    lvalue   go to state 16


State 46

   34 exp: exp GT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 80
    funcall  go to state 15
    lvalue   go to state 16


State 47

   35 exp: exp GE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 81
    funcall  go to state 15
    lvalue   go to state 16


State 48

   36 exp: exp AND . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 82
    funcall  go to state 15
    lvalue   go to state 16


State 49

   37 exp: exp OR . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 83
    funcall  go to state 15
    lvalue   go to state 16


State 50

   62 lvalue: lvalue LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 84
    funcall  go to state 15
    lvalue   go to state 16


State 51

   61 lvalue: lvalue DOT . ID

    ID  shift, and go to state 85


State 52

   42 exp: lvalue ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 86
    funcall  go to state 15
    lvalue   go to state 16


State 53

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   51    | error SEMICOLON exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 51 (exp)


State 54

   52 funcall: ID LPAREN RPAREN .

    $default  reduce using rule 52 (funcall)


State 55

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   54 para: exp .
   55     | exp . COMMA para

    COMMA   shift, and go to state 87
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 54 (para)


State 56

   53 funcall: ID LPAREN para . RPAREN

    RPAREN  shift, and go to state 88


State 57

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   39    | ID LBRACK exp . RBRACK OF exp
   63 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 89
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 58

   56 ass: ID . EQ exp
   57    | ID . EQ exp COMMA ass

    EQ  shift, and go to state 90


State 59

   40 exp: ID LBRACE RBRACE .

    $default  reduce using rule 40 (exp)


State 60

   41 exp: ID LBRACE ass . RBRACE

    RBRACE  shift, and go to state 91


State 61

   50 exp: LPAREN error RPAREN .

    $default  reduce using rule 50 (exp)


State 62

   59 expseq: exp SEMICOLON . expseq

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 23
    funcall  go to state 15
    expseq   go to state 92
    lvalue   go to state 16


State 63

   23 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 23 (exp)


State 64

   43 exp: IF exp THEN . exp
   44    | IF exp THEN . exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 93
    funcall  go to state 15
    lvalue   go to state 16


State 65

   45 exp: WHILE exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 94
    funcall  go to state 15
    lvalue   go to state 16


State 66

   46 exp: FOR ID ASSIGN . exp TO exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 95
    funcall  go to state 15
    lvalue   go to state 16


State 67

   17 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   18       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 96


State 68

   15 vardec: VAR ID . ASSIGN exp
   16       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 97
    ASSIGN  shift, and go to state 98


State 69

    7 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 99


State 70

   48 exp: LET decs IN . END
   49    | LET decs IN . expseq END

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    END     shift, and go to state 100
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 23
    funcall  go to state 15
    expseq   go to state 101
    lvalue   go to state 16


State 71

    2 decs: dec decs .

    $default  reduce using rule 2 (decs)


State 72

   26 exp: exp . PLUS exp
   26    | exp PLUS exp .
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 26 (exp)


State 73

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   27    | exp MINUS exp .
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 27 (exp)


State 74

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   28    | exp TIMES exp .
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    $default  reduce using rule 28 (exp)


State 75

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   29    | exp DIVIDE exp .
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    $default  reduce using rule 29 (exp)


State 76

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   30    | exp EQ exp .
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 30 (exp)


State 77

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   31    | exp NEQ exp .
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 31 (exp)


State 78

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   32    | exp LT exp .
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 32 (exp)


State 79

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   33    | exp LE exp .
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 33 (exp)


State 80

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   34    | exp GT exp .
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 34 (exp)


State 81

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   35    | exp GE exp .
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (exp)


State 82

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   36    | exp AND exp .
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47

    $default  reduce using rule 36 (exp)


State 83

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   37    | exp OR exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48

    $default  reduce using rule 37 (exp)


State 84

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   62 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 102
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


State 85

   61 lvalue: lvalue DOT ID .

    $default  reduce using rule 61 (lvalue)


State 86

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   42    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 42 (exp)


State 87

   55 para: exp COMMA . para

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 55
    funcall  go to state 15
    para     go to state 103
    lvalue   go to state 16


State 88

   53 funcall: ID LPAREN para RPAREN .

    $default  reduce using rule 53 (funcall)


State 89

   39 exp: ID LBRACK exp RBRACK . OF exp
   63 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 104

    $default  reduce using rule 63 (lvalue)


State 90

   56 ass: ID EQ . exp
   57    | ID EQ . exp COMMA ass

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 105
    funcall  go to state 15
    lvalue   go to state 16


State 91

   41 exp: ID LBRACE ass RBRACE .

    $default  reduce using rule 41 (exp)


State 92

   59 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 59 (expseq)


State 93

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   43    | IF exp THEN exp .
   44    | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    ELSE    shift, and go to state 106

    $default  reduce using rule 43 (exp)


State 94

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   45    | WHILE exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 45 (exp)


State 95

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   46    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    TO      shift, and go to state 107


State 96

   17 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   18       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 108

    $default  reduce using rule 12 (tyfields)

    tyfields  go to state 109
    tyfield   go to state 110


State 97

   16 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 111


State 98

   15 vardec: VAR ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 112
    funcall  go to state 15
    lvalue   go to state 16


State 99

    7 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 113
    LBRACE  shift, and go to state 114
    ARRAY   shift, and go to state 115

    ty  go to state 116


State 100

   48 exp: LET decs IN END .

    $default  reduce using rule 48 (exp)


State 101

   49 exp: LET decs IN expseq . END

    END  shift, and go to state 117


State 102

   62 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 62 (lvalue)


State 103

   55 para: exp COMMA para .

    $default  reduce using rule 55 (para)


State 104

   39 exp: ID LBRACK exp RBRACK OF . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 118
    funcall  go to state 15
    lvalue   go to state 16


State 105

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   56 ass: ID EQ exp .
   57    | ID EQ exp . COMMA ass

    COMMA   shift, and go to state 119
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 56 (ass)


State 106

   44 exp: IF exp THEN exp ELSE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 120
    funcall  go to state 15
    lvalue   go to state 16


State 107

   46 exp: FOR ID ASSIGN exp TO . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 121
    funcall  go to state 15
    lvalue   go to state 16


State 108

   13 tyfield: ID . COLON ID

    COLON  shift, and go to state 122


State 109

   17 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   18       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 123


State 110

   11 tyfields: tyfield .
   14 tyfield: tyfield . COMMA ID COLON ID

    COMMA  shift, and go to state 124

    $default  reduce using rule 11 (tyfields)


State 111

   16 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 125


State 112

   15 vardec: VAR ID ASSIGN exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 15 (vardec)


State 113

    8 ty: ID .

    $default  reduce using rule 8 (ty)


State 114

    9 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 108

    $default  reduce using rule 12 (tyfields)

    tyfields  go to state 126
    tyfield   go to state 110


State 115

   10 ty: ARRAY . OF ID

    OF  shift, and go to state 127


State 116

    7 tydec: TYPE ID EQ ty .

    $default  reduce using rule 7 (tydec)


State 117

   49 exp: LET decs IN expseq END .

    $default  reduce using rule 49 (exp)


State 118

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   39    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 39 (exp)


State 119

   57 ass: ID EQ exp COMMA . ass

    ID  shift, and go to state 58

    ass  go to state 128


State 120

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   44    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 44 (exp)


State 121

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   46    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49
    DO      shift, and go to state 129


State 122

   13 tyfield: ID COLON . ID

    ID  shift, and go to state 130


State 123

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   18       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 131
    EQ     shift, and go to state 132


State 124

   14 tyfield: tyfield COMMA . ID COLON ID

    ID  shift, and go to state 133


State 125

   16 vardec: VAR ID COLON ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 134
    funcall  go to state 15
    lvalue   go to state 16


State 126

    9 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 135


State 127

   10 ty: ARRAY OF . ID

    ID  shift, and go to state 136


State 128

   57 ass: ID EQ exp COMMA ass .

    $default  reduce using rule 57 (ass)


State 129

   46 exp: FOR ID ASSIGN exp TO exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 137
    funcall  go to state 15
    lvalue   go to state 16


State 130

   13 tyfield: ID COLON ID .

    $default  reduce using rule 13 (tyfield)


State 131

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 138


State 132

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 139
    funcall  go to state 15
    lvalue   go to state 16


State 133

   14 tyfield: tyfield COMMA ID . COLON ID

    COLON  shift, and go to state 140


State 134

   16 vardec: VAR ID COLON ID ASSIGN exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 16 (vardec)


State 135

    9 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 9 (ty)


State 136

   10 ty: ARRAY OF ID .

    $default  reduce using rule 10 (ty)


State 137

   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp
   46    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 46 (exp)


State 138

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 141


State 139

   17 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 17 (fundec)


State 140

   14 tyfield: tyfield COMMA ID COLON . ID

    ID  shift, and go to state 142


State 141

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 143
    funcall  go to state 15
    lvalue   go to state 16


State 142

   14 tyfield: tyfield COMMA ID COLON ID .

    $default  reduce using rule 14 (tyfield)


State 143

   18 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .
   26 exp: exp . PLUS exp
   27    | exp . MINUS exp
   28    | exp . TIMES exp
   29    | exp . DIVIDE exp
   30    | exp . EQ exp
   31    | exp . NEQ exp
   32    | exp . LT exp
   33    | exp . LE exp
   34    | exp . GT exp
   35    | exp . GE exp
   36    | exp . AND exp
   37    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 18 (fundec)
